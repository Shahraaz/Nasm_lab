<sami><head><Title></Title><style type='text/css'><!--.en { Name:English+(auto-generated) ;lang:en; SAMIType:CC;}--></style><SYNC Start=30><P class='en'><font color="#E5E5E5">brightest</font><font color="#CCCCCC"> vitorio we&#39;re gonna talk about</font><SYNC Start=1920><P class='en'>how to do multiplication and<font color="#E5E5E5"> division in</font><SYNC Start=4650><P class='en'>assembly<font color="#CCCCCC"> alright so as</font><font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> I&#39;ve</font><SYNC Start=9660><P class='en'>set<font color="#CCCCCC"> up the basic assembly</font><font color="#E5E5E5"> file to print</font><SYNC Start=14400><P class='en'><font color="#CCCCCC">a four-hour program</font><font color="#E5E5E5"> so here I set up a</font><SYNC Start=16470><P class='en'><font color="#E5E5E5">message saying</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> result of the</font><SYNC Start=19470><P class='en'><font color="#CCCCCC">operation will be</font><font color="#E5E5E5"> such-and-such and here</font><SYNC Start=22199><P class='en'>is the world code<font color="#CCCCCC"> actually resigns</font><font color="#E5E5E5"> and</font><SYNC Start=24840><P class='en'>I&#39;m making<font color="#E5E5E5"> reference to the printf</font><SYNC Start=27029><P class='en'><font color="#CCCCCC">function from C calling library</font><font color="#E5E5E5"> and of</font><SYNC Start=30900><P class='en'>course I&#39;m making<font color="#CCCCCC"> my main label</font><SYNC Start=32940><P class='en'>available to external vacations here I<SYNC Start=37170><P class='en'>create my stack frame and here I destroy<SYNC Start=39989><P class='en'>my stack frame<font color="#E5E5E5"> okay so let&#39;s go ahead</font><SYNC Start=42840><P class='en'>and<font color="#E5E5E5"> do multiplication real quick and say</font><SYNC Start=44940><P class='en'>we<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to do 50 multiply by 3 which is</font><SYNC Start=50250><P class='en'>150<font color="#E5E5E5"> and so now how to do this instead of</font><SYNC Start=54649><P class='en'>assembly<font color="#E5E5E5"> is to say we want to move a X</font><SYNC Start=57899><P class='en'>register to be 50 because the<SYNC Start=60120><P class='en'>multiplication instruction<font color="#E5E5E5"> expects that</font><SYNC Start=62250><P class='en'>whatever you&#39;re<font color="#E5E5E5"> going to be multiplying</font><SYNC Start=63750><P class='en'>by<font color="#E5E5E5"> it&#39;s going</font><font color="#CCCCCC"> to be held inside 50 and</font><SYNC Start=65939><P class='en'>it expects<font color="#E5E5E5"> that the operand for</font><SYNC Start=69060><P class='en'>multiplication<font color="#CCCCCC"> is going to be either a</font><SYNC Start=72659><P class='en'>register value or a<font color="#E5E5E5"> memory location</font><font color="#CCCCCC"> so</font><SYNC Start=76680><P class='en'>we&#39;re gonna use a memory<font color="#E5E5E5"> location</font><SYNC Start=77640><P class='en'>because it&#39;s slightly<font color="#CCCCCC"> faster to access</font><SYNC Start=79770><P class='en'>the CPU memory<font color="#E5E5E5"> as opposed</font><font color="#CCCCCC"> to actual</font><SYNC Start=83520><P class='en'>memory locations and so now we&#39;re gonna<SYNC Start=86250><P class='en'>say multiple x ECX<font color="#E5E5E5"> now this means that</font><SYNC Start=92009><P class='en'><font color="#E5E5E5">we&#39;re gonna say 3 the</font><font color="#CCCCCC"> value stored</font><SYNC Start=94650><P class='en'>inside<font color="#CCCCCC"> a X register because</font><font color="#E5E5E5"> this has</font><font color="#CCCCCC"> to</font><SYNC Start=97079><P class='en'>be a register value or a<font color="#E5E5E5"> memory location</font><SYNC Start=99770><P class='en'><font color="#E5E5E5">this multiplied by the</font><font color="#CCCCCC"> value stored</font><SYNC Start=102750><P class='en'><font color="#E5E5E5">inside</font><font color="#CCCCCC"> of a extra ister</font><font color="#E5E5E5"> so 50 times 3</font><SYNC Start=105899><P class='en'>and the result of the<font color="#CCCCCC"> operation is going</font><SYNC Start=108420><P class='en'><font color="#CCCCCC">to be stored inside out</font><font color="#E5E5E5"> a X register</font><SYNC Start=110909><P class='en'><font color="#E5E5E5">which means that 50 is going to be</font><SYNC Start=113759><P class='en'>erased<font color="#E5E5E5"> and 150 is going to be put in its</font><SYNC Start=116579><P class='en'><font color="#E5E5E5">place</font><SYNC Start=117060><P class='en'>so let&#39;s go ahead<font color="#E5E5E5"> and call the printf</font><SYNC Start=120450><P class='en'>function<SYNC Start=128590><P class='en'><font color="#E5E5E5">okay so over at</font><font color="#CCCCCC"> our assembly line</font><font color="#E5E5E5"> we&#39;re</font><SYNC Start=131390><P class='en'><font color="#E5E5E5">gonna compile a program by saying</font><font color="#CCCCCC"> nessam</font><SYNC Start=134390><P class='en'>net<font color="#CCCCCC"> watt assembler</font><font color="#E5E5E5"> produce and he</font><font color="#CCCCCC"> had</font><SYNC Start=137620><P class='en'>e.l.f file using<font color="#CCCCCC"> the input</font><font color="#E5E5E5"> file ASM and</font><SYNC Start=142070><P class='en'>produce an output file called<font color="#CCCCCC"> maltitol</font><SYNC Start=145760><P class='en'><font color="#CCCCCC">and so a composite</font><font color="#E5E5E5"> and then we&#39;re gonna</font><SYNC Start=149720><P class='en'>link it to the<font color="#CCCCCC"> actual program</font><font color="#E5E5E5"> to say GCC</font><SYNC Start=153260><P class='en'>make an output file called<font color="#E5E5E5"> MLT and use</font><SYNC Start=157970><P class='en'>the<font color="#CCCCCC"> input file that we generated from</font><SYNC Start=161030><P class='en'>here<font color="#E5E5E5"> and so now</font><font color="#CCCCCC"> we&#39;re gonna run</font><font color="#E5E5E5"> the</font><SYNC Start=164090><P class='en'>program<font color="#E5E5E5"> and there we go</font><SYNC Start=167740><P class='en'>so this<font color="#E5E5E5"> is the result an F</font><font color="#CCCCCC"> horse</font><font color="#E5E5E5"> it&#39;s</font><SYNC Start=170720><P class='en'>150<font color="#E5E5E5"> so now let&#39;s do division okay so for</font><SYNC Start=176630><P class='en'>division<font color="#CCCCCC"> it&#39;s slightly more different</font><SYNC Start=179870><P class='en'>yeah it&#39;s a<font color="#E5E5E5"> little bit different because</font><SYNC Start=181970><P class='en'>an additional register is put in place<SYNC Start=184900><P class='en'>so general information<font color="#E5E5E5"> let&#39;s cover</font><SYNC Start=187970><P class='en'>something real quick<font color="#CCCCCC"> by saying looking</font><SYNC Start=191240><P class='en'>at the net wide assembler so this is the<SYNC Start=198350><P class='en'>file the website that I visited<font color="#E5E5E5"> real</font><SYNC Start=201560><P class='en'>quick to<font color="#E5E5E5"> get some information</font><font color="#CCCCCC"> okay so</font><SYNC Start=205730><P class='en'>what it&#39;s saying is sorry<font color="#E5E5E5"> for the number</font><SYNC Start=207620><P class='en'>we&#39;re gonna<font color="#E5E5E5"> be dividing by you should</font><font color="#CCCCCC"> be</font><SYNC Start=209690><P class='en'>held inside<font color="#E5E5E5"> of the ax register such that</font><SYNC Start=212930><P class='en'>the higher end of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> number is stored</font><SYNC Start=216140><P class='en'>inside<font color="#CCCCCC"> of the DX register and the lower</font><SYNC Start=219410><P class='en'>end of the<font color="#CCCCCC"> number students</font><font color="#E5E5E5"> out of the ax</font><SYNC Start=221360><P class='en'>register and the results is stored again<SYNC Start=225910><P class='en'>in the<font color="#CCCCCC"> ax register while the</font><font color="#E5E5E5"> remainder</font><SYNC Start=229070><P class='en'>is stored<font color="#E5E5E5"> inside of the</font><font color="#CCCCCC"> edx register so</font><SYNC Start=232370><P class='en'>let&#39;s use this knowledge to<font color="#E5E5E5"> perform</font><SYNC Start=235130><P class='en'>division<font color="#E5E5E5"> so</font><font color="#CCCCCC"> so basically we&#39;re still</font><SYNC Start=238430><P class='en'>wanting<font color="#E5E5E5"> to do 50 divided</font><font color="#CCCCCC"> by 3 but</font><font color="#E5E5E5"> in</font><SYNC Start=243080><P class='en'>this case what we&#39;re<font color="#E5E5E5"> gonna do is</font><SYNC Start=244850><P class='en'>move EDX with zero<font color="#E5E5E5"> because really what</font><SYNC Start=248900><P class='en'>this<font color="#E5E5E5"> is going to translate</font><font color="#CCCCCC"> sue is saying</font><SYNC Start=250820><P class='en'>I<font color="#E5E5E5"> wanted the EDX in combination words</font><SYNC Start=255200><P class='en'>the<font color="#CCCCCC"> EAX register</font><font color="#E5E5E5"> all of</font><font color="#CCCCCC"> this value</font><font color="#E5E5E5"> okay</font><SYNC Start=260930><P class='en'><font color="#E5E5E5">it&#39;s going to be divided by</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> that&#39;s</font><SYNC Start=265370><P class='en'><font color="#E5E5E5">basically what&#39;s going on so to satisfy</font><SYNC Start=269210><P class='en'><font color="#CCCCCC">this rather odd combination is we want</font><SYNC Start=272840><P class='en'>to<font color="#E5E5E5"> say move</font><font color="#CCCCCC"> zero into DB X such that</font><SYNC Start=276710><P class='en'>this<font color="#E5E5E5"> would be zero plus the</font><font color="#CCCCCC"> number</font><SYNC Start=280880><P class='en'>stored inside<font color="#CCCCCC"> of a</font><font color="#E5E5E5"> X register so that&#39;s</font><SYNC Start=287690><P class='en'>it now remember of course<font color="#E5E5E5"> the result is</font><SYNC Start=291290><P class='en'>still<font color="#E5E5E5"> stored inside the ax register and</font><SYNC Start=293900><P class='en'>so let&#39;s go<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to a command line and</font><SYNC Start=295700><P class='en'>recompile the program<font color="#E5E5E5"> we generate the</font><SYNC Start=298340><P class='en'>file we link<font color="#E5E5E5"> it and we run it mistake</font><font color="#CCCCCC"> I</font><SYNC Start=306980><P class='en'>should<font color="#CCCCCC"> change this to divide and save so</font><SYNC Start=311090><P class='en'>if we do this<font color="#E5E5E5"> again</font><SYNC Start=315980><P class='en'>and of course we get<font color="#E5E5E5"> 16</font><font color="#CCCCCC"> it&#39;s 16</font><SYNC Start=325020><P class='en'>it&#39;s 16 because<font color="#E5E5E5"> we&#39;re doing integer</font><SYNC Start=327120><P class='en'><font color="#E5E5E5">multiplication so the lower and so it</font><SYNC Start=331380><P class='en'>just<font color="#E5E5E5"> returns the whole integer and so</font><SYNC Start=333870><P class='en'>yeah that&#39;s<font color="#E5E5E5"> it for this tutorial</font><SYNC Start=335840><P class='en'><font color="#E5E5E5">all right well that&#39;s</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to do it for</font><SYNC Start=338040><P class='en'>this tutorial<font color="#CCCCCC"> please as always leave</font><font color="#E5E5E5"> a</font><SYNC Start=340500><P class='en'>comment<font color="#CCCCCC"> below</font><font color="#E5E5E5"> and rate and</font><font color="#CCCCCC"> subscribe</font><SYNC Start=343530><P class='en'>thank you</body></sami>