<sami><head><Title></Title><style type='text/css'><!--.en { Name:English+(auto-generated) ;lang:en; SAMIType:CC;}--></style><SYNC Start=30><P class='en'>in this video<font color="#CCCCCC"> tool</font><font color="#E5E5E5"> we&#39;re gonna be going</font><SYNC Start=2370><P class='en'>over<font color="#CCCCCC"> how to use interrupts to make</font><SYNC Start=5160><P class='en'>system calls<font color="#E5E5E5"> inside of all the next box</font><SYNC Start=8269><P class='en'><font color="#CCCCCC">alright so let&#39;s get to it</font><SYNC Start=11809><P class='en'>firstly<font color="#E5E5E5"> let&#39;s write the</font><font color="#CCCCCC"> general</font><font color="#E5E5E5"> layout</font><SYNC Start=14460><P class='en'>of<font color="#E5E5E5"> a net wide assembler source file</font><SYNC Start=27210><P class='en'>you<SYNC Start=43350><P class='en'>what is<font color="#E5E5E5"> a system interrupt a system</font><SYNC Start=46780><P class='en'>interrupt is nothing<font color="#E5E5E5"> more than a system</font><SYNC Start=48430><P class='en'>call<font color="#E5E5E5"> and that basically translates to</font><SYNC Start=51790><P class='en'>making<font color="#E5E5E5"> requests from the</font><font color="#CCCCCC"> operating</font><SYNC Start=54850><P class='en'><font color="#CCCCCC">system and</font><font color="#E5E5E5"> asking it basically to do</font><SYNC Start=57070><P class='en'>something for you<font color="#E5E5E5"> in our case we&#39;re</font><SYNC Start=60220><P class='en'><font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be asking the</font><font color="#CCCCCC"> operating system</font><SYNC Start=61900><P class='en'>to write a message to this console to<SYNC Start=65950><P class='en'><font color="#CCCCCC">the screen so there</font><font color="#E5E5E5"> are several</font><SYNC Start=68590><P class='en'>different<font color="#CCCCCC"> types of system calls and each</font><SYNC Start=71110><P class='en'><font color="#E5E5E5">of these system</font><font color="#CCCCCC"> calls have a unique</font><SYNC Start=74460><P class='en'>identifier<font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can see I did a quick</font><SYNC Start=78910><P class='en'><font color="#E5E5E5">Google</font><font color="#CCCCCC"> search for Linux system calls</font><font color="#E5E5E5"> and</font><SYNC Start=82000><P class='en'>this<font color="#E5E5E5"> was the first resort result that I</font><SYNC Start=84700><P class='en'>got and it displays<font color="#E5E5E5"> a pretty good amount</font><SYNC Start=88780><P class='en'><font color="#E5E5E5">of information on the next system calls</font><SYNC Start=92700><P class='en'><font color="#CCCCCC">remember one</font><font color="#E5E5E5"> thing to know</font><font color="#CCCCCC"> that is with</font><SYNC Start=96100><P class='en'>system calls<font color="#E5E5E5"> you have to have</font><font color="#CCCCCC"> values</font><SYNC Start=100119><P class='en'>stored<font color="#E5E5E5"> in registers like the</font><SYNC Start=102070><P class='en'>accumulation register the buffer<SYNC Start=105009><P class='en'>register the counter<font color="#CCCCCC"> register the data</font><SYNC Start=107830><P class='en'>register<font color="#E5E5E5"> and so on and so forth so so to</font><SYNC Start=112660><P class='en'>make a system call for<font color="#CCCCCC"> rights we have to</font><SYNC Start=115000><P class='en'>put the value<font color="#CCCCCC"> for</font><font color="#E5E5E5"> inside of the ax</font><SYNC Start=117819><P class='en'>register and then over and<font color="#E5E5E5"> the BX</font><SYNC Start=121899><P class='en'>register we have to put in the value<font color="#CCCCCC"> of</font><SYNC Start=125160><P class='en'>the value<font color="#E5E5E5"> 1 which is going to represent</font><SYNC Start=128849><P class='en'><font color="#E5E5E5">the file that we</font><font color="#CCCCCC"> want to write</font><font color="#E5E5E5"> to in our</font><SYNC Start=131650><P class='en'>case we&#39;re<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be writing to file</font><SYNC Start=133090><P class='en'>number 1<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> the Linux standard</font><SYNC Start=135670><P class='en'><font color="#E5E5E5">output whilst then while the foul number</font><SYNC Start=140170><P class='en'><font color="#CCCCCC">0</font><font color="#E5E5E5"> is the next standard inputs the</font><SYNC Start=144040><P class='en'>keyboard<font color="#E5E5E5"> and standard</font><font color="#CCCCCC"> output number 3</font><SYNC Start=147880><P class='en'>number<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> is the standard error</font><font color="#CCCCCC"> output so</font><SYNC Start=152349><P class='en'>in this case we&#39;re going<font color="#E5E5E5"> to pass</font><font color="#CCCCCC"> 1 to DX</font><SYNC Start=155050><P class='en'><font color="#E5E5E5">register continuing on this counter</font><SYNC Start=158620><P class='en'>register<font color="#E5E5E5"> is going to have the address of</font><SYNC Start=161440><P class='en'>the message<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> want to display</font><font color="#E5E5E5"> and</font><SYNC Start=163379><P class='en'>the data register is going to just<SYNC Start=166090><P class='en'>contain the<font color="#E5E5E5"> number of bytes that we want</font><SYNC Start=169180><P class='en'><font color="#CCCCCC">to write to the screen</font><SYNC Start=171180><P class='en'>so<font color="#CCCCCC"> a quick</font><font color="#E5E5E5"> review basically what you&#39;re</font><SYNC Start=174209><P class='en'>doing<font color="#CCCCCC"> when you&#39;re making system calls</font><font color="#E5E5E5"> is</font><SYNC Start=176189><P class='en'>by basically<font color="#CCCCCC"> taking numbers</font><font color="#E5E5E5"> into the</font><SYNC Start=179310><P class='en'>register appropriate registers to<SYNC Start=181620><P class='en'>satisfy the requirement<font color="#CCCCCC"> for that</font><SYNC Start=184349><P class='en'>particular<font color="#E5E5E5"> system call</font><font color="#CCCCCC"> W you want to</font><SYNC Start=186720><P class='en'>actually<font color="#E5E5E5"> implement</font><SYNC Start=192400><P class='en'>so this<font color="#E5E5E5"> Terminator that determinates to</font><SYNC Start=195170><P class='en'>a string<font color="#E5E5E5"> and makes it so that</font><font color="#CCCCCC"> we have a</font><SYNC Start=197990><P class='en'>return line<font color="#E5E5E5"> and remember for the system</font><SYNC Start=202250><P class='en'>call we need the<font color="#CCCCCC"> total number of bytes</font><SYNC Start=204050><P class='en'><font color="#CCCCCC">that</font><font color="#E5E5E5"> we want to write to the screen and</font><SYNC Start=206150><P class='en'>so to do that we&#39;re just<font color="#E5E5E5"> going to count</font><SYNC Start=208190><P class='en'>the<font color="#CCCCCC"> number of characters inside of this</font><SYNC Start=211400><P class='en'><font color="#CCCCCC">inside</font><font color="#E5E5E5"> of this string</font><SYNC Start=223120><P class='en'>you<SYNC Start=226220><P class='en'>so I counted 26<font color="#E5E5E5"> so that&#39;s</font><font color="#CCCCCC"> what I&#39;m</font><font color="#E5E5E5"> going</font><SYNC Start=228440><P class='en'>to put there now let&#39;s actually write<SYNC Start=233350><P class='en'>the system<font color="#E5E5E5"> call and</font><font color="#CCCCCC"> we do that by saying</font><SYNC Start=237400><P class='en'><font color="#E5E5E5">we have to move the</font><font color="#CCCCCC"> system call that we</font><SYNC Start=241400><P class='en'>want which is going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> 4</font><font color="#E5E5E5"> if you</font><SYNC Start=244790><P class='en'><font color="#E5E5E5">remember we want 4 to be</font><font color="#CCCCCC"> our system call</font><SYNC Start=251750><P class='en'><font color="#E5E5E5">and this is going to</font><font color="#CCCCCC"> be you know</font><font color="#E5E5E5"> the</font><SYNC Start=255560><P class='en'>file<font color="#E5E5E5"> the message address and the number</font><SYNC Start=259160><P class='en'>of bytes<font color="#CCCCCC"> to write so that&#39;s what&#39;s going</font><SYNC Start=262310><P class='en'><font color="#E5E5E5">on</font><SYNC Start=269770><P class='en'>one is standard output while<font color="#E5E5E5"> zero is</font><SYNC Start=275009><P class='en'>standard<font color="#E5E5E5"> inputs and</font><font color="#CCCCCC"> two is standard</font><SYNC Start=281860><P class='en'>error<SYNC Start=291770><P class='en'>now ECX is going to hold the message<SYNC Start=295009><P class='en'>address<font color="#E5E5E5"> and you do message addresses by</font><SYNC Start=298699><P class='en'>just simply having<font color="#CCCCCC"> the name of the</font><SYNC Start=300650><P class='en'>variable<font color="#E5E5E5"> that is an alias</font><font color="#CCCCCC"> for them for</font><SYNC Start=304009><P class='en'><font color="#E5E5E5">the address of the particular variable</font><SYNC Start=308289><P class='en'><font color="#CCCCCC">next you want to actually</font><font color="#E5E5E5"> put in the</font><SYNC Start=313759><P class='en'>number<font color="#CCCCCC"> of bytes to</font><font color="#E5E5E5"> write and we do that</font><SYNC Start=316669><P class='en'>by making use of the message length<SYNC Start=335719><P class='en'>and now this is<font color="#CCCCCC"> the interrupts</font><SYNC Start=352330><P class='en'>this hands over control<font color="#CCCCCC"> to the operating</font><SYNC Start=354699><P class='en'><font color="#E5E5E5">system</font><font color="#CCCCCC"> and tells it tells it to use all</font><SYNC Start=357759><P class='en'>these informations to<font color="#E5E5E5"> make a system call</font><SYNC Start=360509><P class='en'><font color="#CCCCCC">and so that&#39;s it let&#39;s go</font><font color="#E5E5E5"> to a console</font><SYNC Start=363370><P class='en'>and compile<font color="#E5E5E5"> this program</font><SYNC Start=374659><P class='en'>it says we<font color="#CCCCCC"> have an error so let&#39;s go</font><SYNC Start=377069><P class='en'><font color="#CCCCCC">ahead</font><font color="#E5E5E5"> and correct that</font><SYNC Start=384800><P class='en'>problem fixed<font color="#E5E5E5"> let&#39;s come back</font><SYNC Start=393879><P class='en'>so this is our<font color="#E5E5E5"> program let&#39;s go ahead</font><SYNC Start=396969><P class='en'>and run<font color="#CCCCCC"> our program and</font><font color="#E5E5E5"> it should print</font><SYNC Start=399069><P class='en'>out the message<font color="#E5E5E5"> everyone until there we</font><SYNC Start=402249><P class='en'>go<SYNC Start=403770><P class='en'>assembly is<font color="#CCCCCC"> freaking cool now if you</font><SYNC Start=408580><P class='en'>wanted<font color="#E5E5E5"> I can write an additional</font><SYNC Start=410999><P class='en'>function<font color="#E5E5E5"> to make use of this program</font><SYNC Start=415800><P class='en'><font color="#CCCCCC">making use of these instructions so I</font><SYNC Start=418240><P class='en'>don&#39;t have to write this every single<SYNC Start=419949><P class='en'><font color="#E5E5E5">time to do that it&#39;s pretty simple we</font><SYNC Start=423759><P class='en'><font color="#CCCCCC">have to create a new</font><font color="#E5E5E5"> stack frame</font><font color="#CCCCCC"> for a</font><SYNC Start=427059><P class='en'>new function<SYNC Start=436240><P class='en'>and we&#39;re<font color="#E5E5E5"> going to call it right</font><SYNC Start=447410><P class='en'>but instead<font color="#E5E5E5"> of making references to this</font><SYNC Start=451000><P class='en'>variable we&#39;re going<font color="#CCCCCC"> to say EVP -8 so R</font><SYNC Start=460910><P class='en'><font color="#E5E5E5">plus</font><font color="#CCCCCC"> 8 and then here we&#39;re going</font><font color="#E5E5E5"> to say</font><SYNC Start=464890><P class='en'>EBP plus 12<font color="#E5E5E5"> this watch my other</font><SYNC Start=469990><P class='en'><font color="#E5E5E5">tutorials when I talk about the stack</font><SYNC Start=472220><P class='en'>and this will make perfect<font color="#CCCCCC"> sense to you</font><SYNC Start=482620><P class='en'><font color="#CCCCCC">all right so that&#39;s</font><font color="#E5E5E5"> it and</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> let&#39;s</font><SYNC Start=485380><P class='en'>go ahead<font color="#E5E5E5"> and change this</font><SYNC Start=493260><P class='en'>we&#39;re<font color="#CCCCCC"> gonna say</font><font color="#E5E5E5"> push</font><SYNC Start=501309><P class='en'>message<font color="#E5E5E5"> length</font><SYNC Start=504080><P class='en'>push message<font color="#CCCCCC"> then call right</font><SYNC Start=515469><P class='en'>if we come<font color="#CCCCCC"> back and recompile</font><font color="#E5E5E5"> the</font><SYNC Start=517450><P class='en'><font color="#E5E5E5">program after fixing our problem</font><SYNC Start=537060><P class='en'>and it&#39;s still assembly<font color="#CCCCCC"> it&#39;s freaking</font><SYNC Start=539580><P class='en'>cool<font color="#CCCCCC"> all right so join me in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> next</font><SYNC Start=541830><P class='en'>tutorial and as always please rate and<SYNC Start=544950><P class='en'><font color="#E5E5E5">subscribe and drop a comment</font><font color="#CCCCCC"> below</font><font color="#E5E5E5"> thank</font><SYNC Start=548580><P class='en'>you</body></sami>