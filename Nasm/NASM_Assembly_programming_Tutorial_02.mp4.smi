<sami><head><Title></Title><style type='text/css'><!--.en { Name:English+(auto-generated) ;lang:en; SAMIType:CC;}--></style><SYNC Start=0><P class='en'><font color="#E5E5E5">all right everybody welcome to another</font><SYNC Start=1589><P class='en'><font color="#E5E5E5">assembly tutorial in this tutorial I</font><SYNC Start=4410><P class='en'>want<font color="#E5E5E5"> to go over how to define integers</font><SYNC Start=6359><P class='en'>and as well as how to make our<SYNC Start=9139><P class='en'><font color="#E5E5E5">compilation</font><font color="#CCCCCC"> process seamless</font><font color="#E5E5E5"> and</font><SYNC Start=12780><P class='en'>integrated by<font color="#E5E5E5"> using linux shell</font><SYNC Start=15599><P class='en'>scripting<font color="#CCCCCC"> I have a tutorial</font><font color="#E5E5E5"> on my</font><SYNC Start=18060><P class='en'><font color="#CCCCCC">channel</font><font color="#E5E5E5"> on how to do linux shell</font><SYNC Start=19680><P class='en'>scripting<font color="#E5E5E5"> but if you want to go ahead</font><SYNC Start=21990><P class='en'><font color="#E5E5E5">and pause the video and copy down this</font><SYNC Start=24539><P class='en'>script real quick it makes your life<SYNC Start=27029><P class='en'>easier<font color="#CCCCCC"> otherwise you can just do what</font><SYNC Start=29220><P class='en'>we&#39;ve<font color="#CCCCCC"> been</font><font color="#E5E5E5"> doing which is NSM</font><font color="#CCCCCC"> - f and</font><SYNC Start=32668><P class='en'>you know all<font color="#E5E5E5"> that jazz and then convert</font><SYNC Start=35340><P class='en'>it<font color="#CCCCCC"> to you know</font><font color="#E5E5E5"> by using the script</font><font color="#CCCCCC"> I</font><SYNC Start=38100><P class='en'>just<font color="#CCCCCC"> make</font><font color="#E5E5E5"> it a little bit more</font><font color="#CCCCCC"> easier</font><SYNC Start=39450><P class='en'><font color="#CCCCCC">myself okay so this is this entire</font><SYNC Start=42000><P class='en'>script and<font color="#E5E5E5"> its entirety okay back to our</font><SYNC Start=46200><P class='en'>assembly<font color="#E5E5E5"> program now</font><font color="#CCCCCC"> we&#39;re going</font><font color="#E5E5E5"> to talk</font><SYNC Start=48989><P class='en'><font color="#E5E5E5">about how to declare integers and assign</font><SYNC Start=51809><P class='en'>values to<font color="#E5E5E5"> it and change values and then</font><SYNC Start=54449><P class='en'>as well as<font color="#E5E5E5"> print out that</font><font color="#CCCCCC"> value to the</font><SYNC Start=57120><P class='en'>screen<font color="#E5E5E5"> to</font><font color="#CCCCCC"> show what&#39;s going on</font><font color="#E5E5E5"> okay so</font><SYNC Start=59730><P class='en'>let&#39;s get to it<font color="#E5E5E5"> we&#39;re going to</font><SYNC Start=61649><P class='en'><font color="#E5E5E5">front/back</font><font color="#CCCCCC"> in our data section we&#39;re</font><SYNC Start=64080><P class='en'>going<font color="#E5E5E5"> to define an a variable called I</font><SYNC Start=66920><P class='en'>and<font color="#CCCCCC"> that variable is going</font><font color="#E5E5E5"> to be a</font><SYNC Start=69979><P class='en'><font color="#E5E5E5">double a double it&#39;s a defined double so</font><SYNC Start=76680><P class='en'>this is the basic breakdown of<font color="#E5E5E5"> all these</font><SYNC Start=78869><P class='en'>types of keywords and<font color="#E5E5E5"> net wide assembler</font><SYNC Start=82670><P class='en'>define byte is<font color="#E5E5E5"> 8</font><font color="#CCCCCC"> bits so in other words</font><SYNC Start=86729><P class='en'><font color="#CCCCCC">it&#39;s a byte define word a word is 16</font><SYNC Start=90180><P class='en'>bits<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and define double a</font><font color="#CCCCCC"> double is</font><SYNC Start=95820><P class='en'>a 32 bits<SYNC Start=97079><P class='en'>so that&#39;s your integers<font color="#CCCCCC"> and your floats</font><SYNC Start=100890><P class='en'><font color="#E5E5E5">and this should be defined</font><font color="#CCCCCC"> Q is should</font><SYNC Start=104850><P class='en'>be<font color="#CCCCCC"> D Q which is a</font><font color="#E5E5E5"> defined quadruple and</font><SYNC Start=108210><P class='en'>at 64 bits<font color="#CCCCCC"> okay so in this</font><font color="#E5E5E5"> case we&#39;re</font><SYNC Start=112920><P class='en'>declaring an integer<font color="#E5E5E5"> and an integer if</font><SYNC Start=115680><P class='en'><font color="#E5E5E5">you&#39;re familiar with C or C++ or Java</font><SYNC Start=118770><P class='en'><font color="#CCCCCC">and in an integer is 32 bits in</font><font color="#E5E5E5"> length</font><SYNC Start=123420><P class='en'><font color="#E5E5E5">and so that&#39;s what we&#39;re</font><font color="#CCCCCC"> doing here</font><SYNC Start=126270><P class='en'>we&#39;re<font color="#E5E5E5"> going to say</font><font color="#CCCCCC"> that this number</font><font color="#E5E5E5"> is</font><SYNC Start=129030><P class='en'>this variable<font color="#E5E5E5"> is going to be of size</font><SYNC Start=132270><P class='en'><font color="#CCCCCC">double word</font><font color="#E5E5E5"> so 120 okay so after we have</font><SYNC Start=137890><P class='en'>this<font color="#CCCCCC"> we&#39;re</font><font color="#E5E5E5"> also going to have a message</font><SYNC Start=140170><P class='en'><font color="#E5E5E5">that&#39;s that says valley of my integer is</font><SYNC Start=143580><P class='en'>you know and then instead<font color="#CCCCCC"> of this it&#39;s</font><SYNC Start=146590><P class='en'><font color="#E5E5E5">going to replace</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and we&#39;re going</font><font color="#CCCCCC"> to</font><SYNC Start=147790><P class='en'>replace<font color="#CCCCCC"> it with I and it should display</font><SYNC Start=149910><P class='en'><font color="#E5E5E5">120 to the screen so let&#39;s go ahead</font><font color="#CCCCCC"> and</font><SYNC Start=153190><P class='en'><font color="#E5E5E5">print this out to the screen and we&#39;re</font><SYNC Start=156220><P class='en'>going to say of course<font color="#CCCCCC"> usually by</font><font color="#E5E5E5"> using</font><SYNC Start=159310><P class='en'>printf<font color="#E5E5E5"> you want to have everything</font><SYNC Start=161560><P class='en'>displayed backwards<font color="#E5E5E5"> so the format and</font><SYNC Start=164920><P class='en'>then the value that we<font color="#CCCCCC"> want to print</font><font color="#E5E5E5"> out</font><SYNC Start=167620><P class='en'>so to do<font color="#CCCCCC"> this in assembly we would go</font><SYNC Start=170080><P class='en'><font color="#E5E5E5">push the address of of the variable I if</font><SYNC Start=176860><P class='en'>you don&#39;t have this D word in front<font color="#E5E5E5"> of I</font><SYNC Start=179380><P class='en'>the compiler or<font color="#CCCCCC"> nasan will give you an</font><SYNC Start=182440><P class='en'>error<font color="#E5E5E5"> telling you that you</font><font color="#CCCCCC"> need to</font><SYNC Start=184030><P class='en'>specify<font color="#CCCCCC"> a</font><font color="#E5E5E5"> size so this keyword is</font><SYNC Start=186850><P class='en'>important<font color="#E5E5E5"> otherwise it will give you an</font><SYNC Start=189280><P class='en'>error and what<font color="#E5E5E5"> this effectively does</font><font color="#CCCCCC"> is</font><SYNC Start=191970><P class='en'>remember the labels are treated as<SYNC Start=194459><P class='en'>memory address locations so therefore<SYNC Start=197470><P class='en'>this<font color="#CCCCCC"> is actually a memory address</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I</font><SYNC Start=201940><P class='en'>is standing in the<font color="#E5E5E5"> place</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> let&#39;s say</font><font color="#CCCCCC"> Oh</font><SYNC Start=205690><P class='en'><font color="#E5E5E5">x8</font><font color="#CCCCCC"> AIDS</font><font color="#E5E5E5"> you know that&#39;s that&#39;s what</font><font color="#CCCCCC"> I is</font><SYNC Start=210190><P class='en'><font color="#E5E5E5">it&#39;s a memory address so all this does</font><SYNC Start=212739><P class='en'>is push<font color="#CCCCCC"> that memory address onto the</font><SYNC Start=214630><P class='en'><font color="#E5E5E5">stack</font><font color="#CCCCCC"> and next we&#39;re going to push the</font><SYNC Start=217630><P class='en'>message<font color="#E5E5E5"> that we want</font><font color="#CCCCCC"> to display</font><font color="#E5E5E5"> and in</font><SYNC Start=221320><P class='en'>this case it&#39;s going to be format<font color="#CCCCCC"> two</font><SYNC Start=223359><P class='en'>and then we&#39;re going<font color="#E5E5E5"> to call printf</font><font color="#CCCCCC"> and</font><SYNC Start=227769><P class='en'>that&#39;s it<font color="#E5E5E5"> so let&#39;s go back</font><font color="#CCCCCC"> to our</font><SYNC Start=229630><P class='en'>terminal<font color="#CCCCCC"> and let&#39;s display this message</font><SYNC Start=232739><P class='en'><font color="#E5E5E5">but first going to compile and it says</font><SYNC Start=235299><P class='en'>everything was successful<font color="#CCCCCC"> and then we&#39;re</font><SYNC Start=237400><P class='en'><font color="#E5E5E5">going to run our program</font><font color="#CCCCCC"> and our sets</font><SYNC Start=240730><P class='en'>our integers<font color="#E5E5E5"> but that means we made a</font><SYNC Start=243130><P class='en'><font color="#E5E5E5">mistake so let&#39;s</font><font color="#CCCCCC"> go back and see</font><font color="#E5E5E5"> what</font><SYNC Start=245620><P class='en'>happened here<SYNC Start=247310><P class='en'><font color="#E5E5E5">okay so the mistake is that here we&#39;re</font><SYNC Start=252319><P class='en'>pushing<font color="#E5E5E5"> not we&#39;re not</font><font color="#CCCCCC"> actually pushing</font><SYNC Start=254630><P class='en'>the<font color="#E5E5E5"> value of I we&#39;re pushing</font><font color="#CCCCCC"> its address</font><SYNC Start=258380><P class='en'><font color="#E5E5E5">so what we have</font><font color="#CCCCCC"> here compiled is again</font><SYNC Start=262850><P class='en'><font color="#E5E5E5">and run it what we have</font><font color="#CCCCCC"> here is the</font><SYNC Start=265070><P class='en'><font color="#E5E5E5">address of I displayed in decimal format</font><SYNC Start=269780><P class='en'><font color="#E5E5E5">as opposed to hexadecimal</font><font color="#CCCCCC"> if we</font><font color="#E5E5E5"> wanted</font><SYNC Start=274639><P class='en'><font color="#E5E5E5">to display it in hexadecimal we just</font><SYNC Start=276650><P class='en'><font color="#CCCCCC">type X here</font><font color="#E5E5E5"> and go</font><font color="#CCCCCC"> back and run so now</font><SYNC Start=282860><P class='en'>this is<font color="#CCCCCC"> the address</font><font color="#E5E5E5"> of I in hexadecimal</font><SYNC Start=287080><P class='en'><font color="#CCCCCC">but that&#39;s</font><font color="#E5E5E5"> something we want we</font><font color="#CCCCCC"> want we</font><SYNC Start=289910><P class='en'>want<font color="#CCCCCC"> the value 120 displayed to the</font><SYNC Start=291950><P class='en'>screen<font color="#E5E5E5"> so therefore what we</font><font color="#CCCCCC"> have to do</font><SYNC Start=293720><P class='en'>is change here<font color="#CCCCCC"> into braces and and this</font><SYNC Start=299330><P class='en'>says instead<font color="#CCCCCC"> of look at the</font><font color="#E5E5E5"> memory</font><SYNC Start=302630><P class='en'>address<font color="#E5E5E5"> and take its</font><font color="#CCCCCC"> contents and push</font><SYNC Start=305660><P class='en'>it onto the stack<font color="#CCCCCC"> so in this case this</font><SYNC Start=308150><P class='en'>is<font color="#CCCCCC"> effectively pushing</font><font color="#E5E5E5"> 120 onto the</font><SYNC Start=311840><P class='en'>stack and<font color="#CCCCCC"> so let&#39;s compile this again</font><SYNC Start=314830><P class='en'><font color="#E5E5E5">run it and as we can</font><font color="#CCCCCC"> see it&#39;s 78</font><font color="#E5E5E5"> and 78</font><SYNC Start=319880><P class='en'>is hexadecimal for 120<font color="#E5E5E5"> and let&#39;s change</font><SYNC Start=325370><P class='en'>this back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Dean save our program</font><SYNC Start=329710><P class='en'><font color="#E5E5E5">compile</font><font color="#CCCCCC"> it again and run and as we can</font><SYNC Start=333860><P class='en'><font color="#CCCCCC">see the value is 120</font><font color="#E5E5E5"> well that&#39;s it for</font><SYNC Start=337280><P class='en'>this tutorial<font color="#E5E5E5"> in the next</font><font color="#CCCCCC"> one we&#39;ll show</font><SYNC Start=339110><P class='en'><font color="#E5E5E5">you how</font><font color="#CCCCCC"> to work with if statements</font><SYNC Start=342010><P class='en'><font color="#CCCCCC">remember to subscribe and</font><font color="#E5E5E5"> rate this</font><SYNC Start=344419><P class='en'>video<font color="#E5E5E5"> thank you</font></body></sami>